const puppeteer = require('puppeteer');

(async () => {
  try {
    console.log('üöÄ Iniciando diagn√≥stico...');
    
    const browser = await puppeteer.launch({
      headless: true,
      args: ['--no-sandbox', '--disable-setuid-sandbox']
    });
    
    const page = await browser.newPage();
    
    // Capturar todos los logs de consola
    page.on('console', msg => {
      const type = msg.type();
      const text = msg.text();
      console.log(`[${type.toUpperCase()}] ${text}`);
    });
    
    // Capturar errores
    page.on('pageerror', error => {
      console.log(`[ERROR] ${error.message}`);
    });
    
    // Capturar fallos de requests
    page.on('requestfailed', request => {
      console.log(`[REQUEST FAILED] ${request.url()}: ${request.failure().errorText}`);
    });
    
    console.log('üì± Navegando a localhost:5174...');
    await page.goto('http://localhost:5174', { 
      waitUntil: 'networkidle0',
      timeout: 30000 
    });
    
    console.log('‚è±Ô∏è  Esperando 10 segundos para observar el comportamiento...');
    await page.waitForTimeout(10000);
    
    // Intentar hacer clic en crear dise√±o si est√° disponible
    try {
      console.log('üé® Buscando bot√≥n "Crear Dise√±o"...');
      const createButton = await page.$('text/Crear Dise√±o');
      if (createButton) {
        console.log('‚úÖ Bot√≥n encontrado, haciendo clic...');
        await createButton.click();
        await page.waitForTimeout(5000);
      } else {
        console.log('‚ùå Bot√≥n "Crear Dise√±o" no encontrado');
      }
    } catch (e) {
      console.log('‚ö†Ô∏è  Error al buscar/hacer clic en bot√≥n:', e.message);
    }
    
    await browser.close();
    console.log('‚úÖ Diagn√≥stico completado');
    
  } catch (error) {
    console.error('‚ùå Error en diagn√≥stico:', error.message);
    process.exit(1);
  }
})();